To create a new project using Helm, you can follow these steps:

1. Create a new directory for your Helm project:
   ```
   mkdir my-project
   cd my-project
   ```

2. Initialize a new Helm chart in your project directory:
   ```
   helm create my-chart
   ```

   This command will generate the basic structure of a Helm chart in a directory named `my-chart`. Inside the `my-chart` directory, you'll find several files and directories that define your chart.

3. Customize your Helm chart:
   - Open the `my-chart/values.yaml` file to set default values for your chart. Modify the values according to your application's requirements.
   - Update the `my-chart/templates` directory to define the Kubernetes resources for your application. You can create or modify YAML files in this directory to include deployments, services, config maps, and other resources.

4. Package your Helm chart:
   ```
   helm package my-chart
   ```

   This command will create a `.tgz` file containing your packaged Helm chart. The file will be named based on the version specified in the `my-chart/Chart.yaml` file.

5. (Optional) Publish your Helm chart to a Helm repository:
   - Set up a Helm repository to host your chart. You can use a public repository like ChartMuseum or create your own private repository.
   - Push your packaged chart to the repository using the appropriate commands or tools provided by the repository.

Now you have created your Helm project and packaged your chart. You can use this chart to install and manage your application deployments on Kubernetes clusters. To install the chart, you can use the `helm install` command and provide the chart file or repository URL.

Remember to refer to the official Helm documentation for detailed information on chart structure, values, templates, and other advanced features of Helm.